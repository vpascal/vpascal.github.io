for (i in z){
write.table(i,"Ungheni_Summary.csv", append = TRUE,sep = ",", col.names = NA)
}
z<-c(loans, participants,users,visits,trained_inds,training_hours,consultations_total,workNovateca)
for (i in z){
write.table(i,"Ungheni_Summary.csv", append = TRUE,sep = ",", col.names = NA, row.names=NA)
}
z<-c(loans, participants,users,visits,trained_inds,training_hours,consultations_total,workNovateca)
for (i in z){
write.table(i,"Ungheni_Summary.csv", append = TRUE,sep = ",", col.names = NA, row.names=FALSE)
}
z<-c(loans, participants,users,visits,trained_inds,training_hours,consultations_total,workNovateca)
for (i in z){
write.table(i,"Ungheni_Summary.csv", append = TRUE,sep = ",", col.names = FALSE, row.names=FALSE)
}
options(stringsAsFactors = FALSE)
data <- read.delim("Soroca.csv", header = T, sep = "\t")
# data cleaning #########################################
trim <- function(x) gsub("^\\s+|\\s+$+|\\?", "", x)
replace <- function(x) gsub("unic", "unique", x)
data <- as.data.frame(apply(data, MARGIN = 2, FUN = trim))
data <- as.data.frame(apply(data, MARGIN = 2, FUN = replace))
data <- data[which(data$Question != "Upload other documents" & data$Question != "Upload photos"), ]
data <- data[which(data$Name != "Biblioteca Publica de Drept" & data$Name != "Biblioteca Nationala a Republicii Moldova"), ]
data <- data[data$Raion != "Chisinau", ]
data$Date <- as.Date(data$Date)
#########################################################
z <- c("users", "gender", "age", "visits", "workNovateca", "loans", "participants", "webpage", "web_visits", "staff", "trained_inds",
"training_topics")
lookup <- c("Number of all unique users to library", "Total number of registered/unic users of each gender", "year", "physical visits",
"Novateca workstation", "Total number of loans of library materials", "Total number of event visitors", "Does your library have a web page",
"If answered yes to previous question", "How many people work in the library", "Number of trained persons", "Topic/title of each training")
lookup <- data.frame(cbind(z, lookup))
for (i in lookup[, 2]) {
pattern <- agrep(i, x = data$Question, useBytes = T)
assign(lookup[which(lookup$lookup == i), 1], data[pattern, ])
}
rm("pattern", "z", "i", "lookup")
#########################################################
# Users
users$Answer <- as.numeric(users$Answer)
users <- ddply(users, .(Date, Question), summarize, Value = sum(Answer, na.rm = T))
users$Date <- as.Date(users$Date)
###### Gender
gender$Answer <- as.numeric(gender$Answer)
gender <- ddply(gender, .(Date, Question), summarize, Value = sum(Answer, na.rm = T))
gender <- cast(gender, Date ~ Question)
gender$Total <- gender[, 2] + gender[, 3]
gender$Percent_Female <- gender[, 2]/gender[, 4] * 100
gender$Percent_Male <- gender[, 3]/gender[, 4] * 100
gender$Date <- as.Date(gender$Date)
# Age
age$Answer <- as.numeric(age$Answer)
age <- cast(age, Date ~ Question, sum, na.rm = T)
age$Total <- age[, 2] + age[, 3] + age[, 4] + age[, 5]
age$Percent_0_16 <- age[, 2]/age$Total * 100
age$Percent_17_30 <- age[, 3]/age$Total * 100
age$Percent_31_57 <- age[, 4]/age$Total * 100
age$Percent_58_above <- age[, 5]/age$Total * 100
age$Date <- as.Date(age$Date)
# Visits
visits$Answer <- as.numeric(visits$Answer)
visits <- cast(visits, Date ~ Question, sum, na.rm = T)
# Workstation
workNovateca$Answer <- as.numeric(workNovateca$Answer)
workNovateca <- cast(workNovateca, Date ~ Question, sum, na.rm = T)
workNovateca$Total <- workNovateca[, 2] + workNovateca[, 3]
workNovateca$Percent_Non_Novateca <- workNovateca[, 2]/workNovateca[, 4] * 100
workNovateca$Percent_Novateca <- workNovateca[, 3]/workNovateca[, 4] * 100
workNovateca$Date <- as.Date(workNovateca$Date)
# Loans
loans$Answer <- as.numeric(loans$Answer)
loans <- ddply(loans, .(Date, Question), summarize, Value = sum(Answer, na.rm = T))
# Participants
participants$Answer <- as.numeric(participants$Answer)
participants <- ddply(participants, .(Date, Question), summarize, Value = sum(Answer, na.rm = T))
participants$Date <- as.Date(participants$Date)
# Webpage
webpage <- as.data.frame(ftable(webpage$Answer ~ webpage$Date))
# selecting manually last two months
webpage <-webpage[which(webpage$webpage.Date =="2014-06-01"|webpage$webpage.Date =="2014-06-01"),]
# webPage visits
web_visits$Answer <- as.numeric(web_visits$Answer)
web_visits <- ddply(web_visits, .(Date, Question), summarize, Value = sum(Answer, na.rm = T))
web_visits$Date<-as.Date(web_visits$Date)
web_visits<-web_visits[web_visits$Date==max(web_visits$Date),]
############# Staff
staff$Answer <- as.numeric(staff$Answer)
staff <- ddply(staff, .(Date, Question), summarize, Value = sum(Answer, na.rm = T))
staff<-staff[staff$Date==max(staff$Date),]
# Training hours
pattern <- grep("The total hours per training|Total number of hours per training, duration in hours", data$Question, useBytes = T)
training_hours <- data[pattern, ]
training_hours$Question[training_hours$Question == "Total number of hours per training, duration in hours"] <- "The total hours per training"
training_hours$Answer <- as.numeric(training_hours$Answer)
training_hours <- ddply(training_hours, .(Date, Question), summarize, Value = sum(Answer, na.rm = T))
training_hours$Date <- as.Date(training_hours$Date)
# Trained individuals
trained_inds$Answer <- as.numeric(trained_inds$Answer)
trained_inds <- ddply(trained_inds, .(Date, Question), summarize, Value = sum(Answer, na.rm = T))
######################
data$Question[data$Question == "Total number of consultations in June"] <- "Number of consultations"
data$Question[data$Question == "Total number of consultations"] <- "Number of consultations"
data$Question[data$Question == "Number of consultations in June"] <- "Number of consultations"
data$Question[data$Question == "Communiqueation"] <- "Communication"
pattern <- grep("Communiqueation|Digital Inclusion|Economic Development|Culture and Leisure|Other consultations| of consultations|Electronic Governance|Health|Education",
data$Question, useBytes = T)
consultations <- data[pattern, ]
consultations_total <- consultations[consultations$Question == "Number of consultations", ]
consultations_total$Answer <- as.numeric(consultations_total$Answer)
consultations_total <- ddply(consultations_total, .(Date, Question), summarize, Value = sum(Answer, na.rm = T))
consultations_type <- consultations[consultations$Question != "Number of consultations", ]
consultations_type$Answer <- as.numeric(consultations_type$Answer)
consultations_type <- ddply(consultations_type, .(Date, Question), summarize, Value = sum(Answer, na.rm = T))
# selecting manually the most recent month
consultations_type_feb <- consultations_type[consultations_type$Date == "2014-06-01", ]
consultations_type_feb$Percent <- consultations_type_feb$Value/sum(consultations_type_feb$Value) * 100
consultations_type_feb <- consultations_type_feb[with(consultations_type_feb, order(-Percent)), ]
#############
pattern <- grep("o |nu a avut loc|Nu am avut |nu am avut|Nu am petrecut|0", ignore.case = T, x = training_topics$Answer,
useBytes = T)
training_topics <- training_topics[-pattern, ]
training_topics<- subset(training_topics, Answer!="")
#####################################
pattern <- grep("Did you library receive any technology donations ", data$Question,
useBytes = T)
tech_donations <- data[pattern, ]
pattern <- grep("volunteers ", data$Question,
useBytes = T)
volunteers <- data[pattern,]
pattern <- grep("Did you library receive any capital donations", data$Question, useBytes = T)
cap_donations <- data[pattern, ]
cap_donations<-as.data.frame(ftable(cap_donations$Answer~cap_donations$Date))
cap_donations$cap_donations.Date<-as.Date(cap_donations$cap_donations.Date)
cap_donations<-cap_donations[cap_donations$cap_donations.Date == max(cap_donations$cap_donations.Date),]
cap_donations<-cap_donations[cap_donations$Freq>0,]
tech_donations<-as.data.frame(ftable(tech_donations$Answer~tech_donations$Date))
tech_donations$tech_donations.Date<-as.Date(tech_donations$tech_donations.Date)
tech_donations<-tech_donations[tech_donations$tech_donations.Date == max(tech_donations$tech_donations.Date),]
tech_donations<-tech_donations[tech_donations$Freq>0,]
volunteers<-as.data.frame(ftable(volunteers$Answer~volunteers$Date))
volunteers$volunteers.Date<-as.Date(volunteers$volunteers.Date)
volunteers<-volunteers[volunteers$volunteers.Date == max(volunteers$volunteers.Date),]
volunteers<-volunteers[volunteers$Freq>0,]
#########################
loans<-sum(loans$Value) # library loans
participants<-sum(participants$Value) # event participants
users<-sum(users$Value) # unique users
visits<-sum(visits[,2]) # library visits
trained_inds<-sum(trained_inds$Value) # trained individuals
training_hours<-sum(training_hours$Value) # trained hours
consultations_total<-sum(consultations_total$Value) # consultations
workNovateca<-mean(workNovateca$Percent_Novateca)
z<-c(loans, participants,users,visits,trained_inds,training_hours,consultations_total,workNovateca)
for (i in z){
write.table(i,"Soroca_Summary.csv", append = TRUE,sep = ",", col.names = FALSE, row.names=FALSE)
}
options(stringsAsFactors = FALSE)
data <- read.delim("Cahul.csv", header = T, sep = "\t")
# data cleaning #########################################
trim <- function(x) gsub("^\\s+|\\s+$+|\\?", "", x)
replace <- function(x) gsub("unic", "unique", x)
data <- as.data.frame(apply(data, MARGIN = 2, FUN = trim))
data <- as.data.frame(apply(data, MARGIN = 2, FUN = replace))
data <- data[which(data$Question != "Upload other documents" & data$Question != "Upload photos"), ]
data <- data[which(data$Name != "Biblioteca Publica de Drept" & data$Name != "Biblioteca Nationala a Republicii Moldova"), ]
data <- data[data$Raion != "Chisinau", ]
data$Date <- as.Date(data$Date)
#########################################################
z <- c("users", "gender", "age", "visits", "workNovateca", "loans", "participants", "webpage", "web_visits", "staff", "trained_inds",
"training_topics")
lookup <- c("Number of all unique users to library", "Total number of registered/unic users of each gender", "year", "physical visits",
"Novateca workstation", "Total number of loans of library materials", "Total number of event visitors", "Does your library have a web page",
"If answered yes to previous question", "How many people work in the library", "Number of trained persons", "Topic/title of each training")
lookup <- data.frame(cbind(z, lookup))
for (i in lookup[, 2]) {
pattern <- agrep(i, x = data$Question, useBytes = T)
assign(lookup[which(lookup$lookup == i), 1], data[pattern, ])
}
rm("pattern", "z", "i", "lookup")
#########################################################
# Users
users$Answer <- as.numeric(users$Answer)
users <- ddply(users, .(Date, Question), summarize, Value = sum(Answer, na.rm = T))
users$Date <- as.Date(users$Date)
###### Gender
gender$Answer <- as.numeric(gender$Answer)
gender <- ddply(gender, .(Date, Question), summarize, Value = sum(Answer, na.rm = T))
gender <- cast(gender, Date ~ Question)
gender$Total <- gender[, 2] + gender[, 3]
gender$Percent_Female <- gender[, 2]/gender[, 4] * 100
gender$Percent_Male <- gender[, 3]/gender[, 4] * 100
gender$Date <- as.Date(gender$Date)
# Age
age$Answer <- as.numeric(age$Answer)
age <- cast(age, Date ~ Question, sum, na.rm = T)
age$Total <- age[, 2] + age[, 3] + age[, 4] + age[, 5]
age$Percent_0_16 <- age[, 2]/age$Total * 100
age$Percent_17_30 <- age[, 3]/age$Total * 100
age$Percent_31_57 <- age[, 4]/age$Total * 100
age$Percent_58_above <- age[, 5]/age$Total * 100
age$Date <- as.Date(age$Date)
# Visits
visits$Answer <- as.numeric(visits$Answer)
visits <- cast(visits, Date ~ Question, sum, na.rm = T)
# Workstation
workNovateca$Answer <- as.numeric(workNovateca$Answer)
workNovateca <- cast(workNovateca, Date ~ Question, sum, na.rm = T)
workNovateca$Total <- workNovateca[, 2] + workNovateca[, 3]
workNovateca$Percent_Non_Novateca <- workNovateca[, 2]/workNovateca[, 4] * 100
workNovateca$Percent_Novateca <- workNovateca[, 3]/workNovateca[, 4] * 100
workNovateca$Date <- as.Date(workNovateca$Date)
# Loans
loans$Answer <- as.numeric(loans$Answer)
loans <- ddply(loans, .(Date, Question), summarize, Value = sum(Answer, na.rm = T))
# Participants
participants$Answer <- as.numeric(participants$Answer)
participants <- ddply(participants, .(Date, Question), summarize, Value = sum(Answer, na.rm = T))
participants$Date <- as.Date(participants$Date)
# Webpage
webpage <- as.data.frame(ftable(webpage$Answer ~ webpage$Date))
# selecting manually last two months
webpage <-webpage[which(webpage$webpage.Date =="2014-06-01"|webpage$webpage.Date =="2014-06-01"),]
# webPage visits
web_visits$Answer <- as.numeric(web_visits$Answer)
web_visits <- ddply(web_visits, .(Date, Question), summarize, Value = sum(Answer, na.rm = T))
web_visits$Date<-as.Date(web_visits$Date)
web_visits<-web_visits[web_visits$Date==max(web_visits$Date),]
############# Staff
staff$Answer <- as.numeric(staff$Answer)
staff <- ddply(staff, .(Date, Question), summarize, Value = sum(Answer, na.rm = T))
staff<-staff[staff$Date==max(staff$Date),]
# Training hours
pattern <- grep("The total hours per training|Total number of hours per training, duration in hours", data$Question, useBytes = T)
training_hours <- data[pattern, ]
training_hours$Question[training_hours$Question == "Total number of hours per training, duration in hours"] <- "The total hours per training"
training_hours$Answer <- as.numeric(training_hours$Answer)
training_hours <- ddply(training_hours, .(Date, Question), summarize, Value = sum(Answer, na.rm = T))
training_hours$Date <- as.Date(training_hours$Date)
# Trained individuals
trained_inds$Answer <- as.numeric(trained_inds$Answer)
trained_inds <- ddply(trained_inds, .(Date, Question), summarize, Value = sum(Answer, na.rm = T))
######################
data$Question[data$Question == "Total number of consultations in June"] <- "Number of consultations"
data$Question[data$Question == "Total number of consultations"] <- "Number of consultations"
data$Question[data$Question == "Number of consultations in June"] <- "Number of consultations"
data$Question[data$Question == "Communiqueation"] <- "Communication"
pattern <- grep("Communiqueation|Digital Inclusion|Economic Development|Culture and Leisure|Other consultations| of consultations|Electronic Governance|Health|Education",
data$Question, useBytes = T)
consultations <- data[pattern, ]
consultations_total <- consultations[consultations$Question == "Number of consultations", ]
consultations_total$Answer <- as.numeric(consultations_total$Answer)
consultations_total <- ddply(consultations_total, .(Date, Question), summarize, Value = sum(Answer, na.rm = T))
consultations_type <- consultations[consultations$Question != "Number of consultations", ]
consultations_type$Answer <- as.numeric(consultations_type$Answer)
consultations_type <- ddply(consultations_type, .(Date, Question), summarize, Value = sum(Answer, na.rm = T))
# selecting manually the most recent month
consultations_type_feb <- consultations_type[consultations_type$Date == "2014-06-01", ]
consultations_type_feb$Percent <- consultations_type_feb$Value/sum(consultations_type_feb$Value) * 100
consultations_type_feb <- consultations_type_feb[with(consultations_type_feb, order(-Percent)), ]
#############
pattern <- grep("o |nu a avut loc|Nu am avut |nu am avut|Nu am petrecut|0", ignore.case = T, x = training_topics$Answer,
useBytes = T)
training_topics <- training_topics[-pattern, ]
training_topics<- subset(training_topics, Answer!="")
#####################################
pattern <- grep("Did you library receive any technology donations ", data$Question,
useBytes = T)
tech_donations <- data[pattern, ]
pattern <- grep("volunteers ", data$Question,
useBytes = T)
volunteers <- data[pattern,]
pattern <- grep("Did you library receive any capital donations", data$Question, useBytes = T)
cap_donations <- data[pattern, ]
cap_donations<-as.data.frame(ftable(cap_donations$Answer~cap_donations$Date))
cap_donations$cap_donations.Date<-as.Date(cap_donations$cap_donations.Date)
cap_donations<-cap_donations[cap_donations$cap_donations.Date == max(cap_donations$cap_donations.Date),]
cap_donations<-cap_donations[cap_donations$Freq>0,]
tech_donations<-as.data.frame(ftable(tech_donations$Answer~tech_donations$Date))
tech_donations$tech_donations.Date<-as.Date(tech_donations$tech_donations.Date)
tech_donations<-tech_donations[tech_donations$tech_donations.Date == max(tech_donations$tech_donations.Date),]
tech_donations<-tech_donations[tech_donations$Freq>0,]
volunteers<-as.data.frame(ftable(volunteers$Answer~volunteers$Date))
volunteers$volunteers.Date<-as.Date(volunteers$volunteers.Date)
volunteers<-volunteers[volunteers$volunteers.Date == max(volunteers$volunteers.Date),]
volunteers<-volunteers[volunteers$Freq>0,]
#########################
loans<-sum(loans$Value) # library loans
participants<-sum(participants$Value) # event participants
users<-sum(users$Value) # unique users
visits<-sum(visits[,2]) # library visits
trained_inds<-sum(trained_inds$Value) # trained individuals
training_hours<-sum(training_hours$Value) # trained hours
consultations_total<-sum(consultations_total$Value) # consultations
workNovateca<-mean(workNovateca$Percent_Novateca)
z<-c(loans, participants,users,visits,trained_inds,training_hours,consultations_total,workNovateca)
for (i in z){
write.table(i,"Cahul_Summary.csv", append = TRUE,sep = ",", col.names = FALSE, row.names=FALSE)
}
View(data)
library(slidify)
load("~/Map/.RData")
plot(m,col=cols[m$cut4],border="white")
plot(m,col=cols[m$cut4],border="white")
plot(m,col=cols[m$cut4],border="white")
plot(Transnistria,col="grey",add=T, border="white")
text(coordinates(m),labels=m$NAME_1,cex=.3,col="black")
library(maptools)
gpclibPermit()
library(rgeos)
library(sp)
library(ggplot2)
library(rgdal)
library(rgeos)
library(gridExtra)
library(scales)
library(extrafont)
loadfonts()
cols <- c("#FFCCAA",  "#FFB380",  "#FF9955",  "#FF7F2A",	"#FF6600")
#m$cut4<-cut(m$Expenses,breaks = 5)
plot(m,col=cols[m$cut4],border="white")
plot(Transnistria,col="grey",add=T, border="white")
text(coordinates(m),labels=m$NAME_1,cex=.3,col="black")
#title(main="Library Users\n as a Percent of Population", col.main="#013383", family="Arial")
vals<-levels(unique(m$cut4))
par( lend = 1 )
legend(x="bottomright",legend=c("71. 7- 111.0","111.1 - 149.0",
"149.1 - 188.0","188.1 - 226.0",
"226.0 - 265.0"), fill=cols,
title="Average Expenditures",
bty="n", cex=0.6, y.intersp=2,
box.cex=c(2,2)		)
mtext("Source: Moldova National Library, 2013",1,line=3,adj=0.5,font=3,cex=0.6)
m<-merge(m,expense,by.x = "NAME_1", by.y = "Raion", all.x=T)
par(family = "Georgia", bg = "transparent", las = 1,omi=c(0.0,0,0.0,0),mai=c(0.0,0,0.0,0))
#par(mfcol = c(1, 3))
par(ps = 20, cex = 1, cex.main = 1)
#cols <- c("#ffffb2",  "#fecc5c",  "#fd8d3c",	"#f03b20",	"#bd0026")
#cols <- c("#C6DBEF",  "#9ECAE1",  "#6BAED6",	"#3182BD",	"#08519C")
cols <- c("#FFCCAA",  "#FFB380",  "#FF9955",  "#FF7F2A",	"#FF6600")
#m$cut4<-cut(m$Expenses,breaks = 5)
plot(m,col=cols[m$cut4],border="white")
plot(Transnistria,col="grey",add=T, border="white")
text(coordinates(m),labels=m$NAME_1,cex=.3,col="black")
#title(main="Library Users\n as a Percent of Population", col.main="#013383", family="Arial")
m
View(expense)
m<-merge(m,expense,by.x = "NAME_1", by.y = "Raion", all.x=T)
par(family = "Georgia", bg = "transparent", las = 1,omi=c(0.0,0,0.0,0),mai=c(0.0,0,0.0,0))
#par(mfcol = c(1, 3))
par(ps = 20, cex = 1, cex.main = 1)
cols <- c("#FFCCAA",  "#FFB380",  "#FF9955",  "#FF7F2A",	"#FF6600")
plot(m,col=cols[m$cut4],border="white")
m@data$Expenses.x
plot(m)
cols
cols <- c("#FFCCAA",  "#FFB380",  "#FF9955",  "#FF7F2A",	"#FF6600")
m$cut4<-cut(m$Expenses,breaks = 5)
plot(m,col=cols[m$cut4],border="white")
m$cut4<-cut(m$Expenses,breaks = 5)
m$cut4<-cut(m$Expenses,breaks = 5)
class(m$Expenses.x)
class(m$Expenses.y)
class(m$Expenses)
load("~/Map/.RData")
library(maptools)
gpclibPermit()
library(rgeos)
library(sp)
library(ggplot2)
library(rgdal)
library(rgeos)
library(gridExtra)
library(scales)
library(extrafont)
loadfonts()
m<-merge(m,expense,by.x = "NAME_1", by.y = "Raion", all.x=T)
par(family = "Georgia", bg = "transparent", las = 1,omi=c(0.0,0,0.0,0),mai=c(0.0,0,0.0,0))
#par(mfcol = c(1, 3))
par(ps = 20, cex = 1, cex.main = 1)
m$cut4<-cut(m$Expenses,breaks = 5)
plot(m,col=cols[m$cut4],border="white")
plot(Transnistria,col="grey",add=T, border="white")
text(coordinates(m),labels=m$NAME_1,cex=.3,col="black")
#title(main="Library Users\n as a Percent of Population", col.main="#013383", family="Arial")
vals<-levels(unique(m$cut4))
par( lend = 1 )
legend(x="bottomright",legend=c("71. 7- 111.0","111.1 - 149.0",
"149.1 - 188.0","188.1 - 226.0",
"226.0 - 265.0"), fill=cols,
title="Average Expenditures",
bty="n", cex=0.6, y.intersp=2,
box.cex=c(2,2)		)
mtext("Source: Moldova National Library, 2013",1,line=3,adj=0.5,font=3,cex=0.6)
cols <- c("#C6DBEF",  "#9ECAE1",  "#6BAED6",	"#3182BD",	"#08519C")
plot(m,col=cols[m$cut4],border="white")
cols <- c("#ffffb2",  "#fecc5c",  "#fd8d3c",	"#f03b20",	"#bd0026")
plot(m,col=cols[m$cut4],border="white")
plot(Transnistria,col="grey",add=T, border="white")
text(coordinates(m),labels=m$NAME_1,cex=.3,col="black")
#title(main="Library Users\n as a Percent of Population", col.main="#013383", family="Arial")
vals<-levels(unique(m$cut4))
par( lend = 1 )
legend(x="bottomright",legend=c("71. 7- 111.0","111.1 - 149.0",
"149.1 - 188.0","188.1 - 226.0",
"226.0 - 265.0"), fill=cols,
title="Average Expenditures",
bty="n", cex=0.6, y.intersp=2,
box.cex=c(2,2)		)
mtext("Source: Moldova National Library, 2013",1,line=3,adj=0.5,font=3,cex=0.6)
source("http://www.pauljhurtado.com/R/code/legendxx.R")
cols <- c("#FFCCAA",  "#FFB380",  "#FF9955",  "#FF7F2A",	"#FF6600")
plot(m,col=cols[m$cut4],border="white")
plot(Transnistria,col="grey",add=T, border="white")
text(coordinates(m),labels=m$NAME_1,cex=.3,col="black")
#title(main="Library Users\n as a Percent of Population", col.main="#013383", family="Arial")
vals<-levels(unique(m$cut4))
par( lend = 1 )
legend(x="bottomright",legend=c("71. 7- 111.0","111.1 - 149.0",
"149.1 - 188.0","188.1 - 226.0",
"226.0 - 265.0"), fill=cols,
title="Average Expenditures",
bty="n", cex=0.6, y.intersp=2,
box.cex=c(2,2)		)
mtext("Source: Moldova National Library, 2013",1,line=3,adj=0.5,font=3,cex=0.6)
par(family = "Georgia", bg = "transparent", las = 1,omi=c(0.0,0,0.0,0),mai=c(0.0,0,0.0,0))
#par(mfcol = c(1, 3))
par(ps = 20, cex = 1, cex.main = 1)
#cols <- c("#ffffb2",  "#fecc5c",  "#fd8d3c",	"#f03b20",	"#bd0026")
#cols <- c("#C6DBEF",  "#9ECAE1",  "#6BAED6",	"#3182BD",	"#08519C")
cols <- c("#FFCCAA",  "#FFB380",  "#FF9955",  "#FF7F2A",	"#FF6600")
#m$cut4<-cut(m$Expenses,breaks = 5)
plot(m,col=cols[m$cut4],border="white")
plot(Transnistria,col="grey",add=T, border="white")
text(coordinates(m),labels=m$NAME_1,cex=.3,col="black")
#title(main="Library Users\n as a Percent of Population", col.main="#013383", family="Arial")
vals<-levels(unique(m$cut4))
par( lend = 1 )
legend(x="bottomright",legend=c("71. 7- 111.0","111.1 - 149.0",
"149.1 - 188.0","188.1 - 226.0",
"226.0 - 265.0"), fill=cols,
title="Average Expenditures",
bty="n", cex=0.6, y.intersp=2,
box.cex=c(2,2)		)
mtext("Source: Moldova National Library, 2013",1,line=3,adj=0.5,font=3,cex=0.6)
plot(m,col=cols[m$cut4],border="white")
plot(Transnistria,col="grey",add=T, border="white")
text(coordinates(m),labels=m$NAME_1,cex=.7,col="black")
#title(main="Library Users\n as a Percent of Population", col.main="#013383", family="Arial")
vals<-levels(unique(m$cut4))
par( lend = 1 )
legend(x="bottomright",legend=c("71. 7- 111.0","111.1 - 149.0",
"149.1 - 188.0","188.1 - 226.0",
"226.0 - 265.0"), fill=cols,
title="Average Expenditures",
bty="n", cex=0.6, y.intersp=2,
box.cex=c(2,2)		)
mtext("Source: Moldova National Library, 2013",1,line=3,adj=0.5,font=3,cex=0.6)
par(family = "Georgia", bg = "transparent", las = 1,omi=c(0.0,0,0.0,0),mai=c(0.0,0,0.0,0))
#par(mfcol = c(1, 3))
par(ps = 20, cex = 1, cex.main = 1)
plot(m,col=cols[m$cut4],border="white")
plot(Transnistria,col="grey",add=T, border="white")
text(coordinates(m),labels=m$NAME_1,cex=.7,col="black")
#title(main="Library Users\n as a Percent of Population", col.main="#013383", family="Arial")
vals<-levels(unique(m$cut4))
par( lend = 1 )
legend(x="bottomright",legend=c("71. 7- 111.0","111.1 - 149.0",
"149.1 - 188.0","188.1 - 226.0",
"226.0 - 265.0"), fill=cols,
title="Average Expenditures",
bty="n", cex=0.6, y.intersp=2,
box.cex=c(2,2)		)
mtext("Source: Moldova National Library, 2013",1,line=3,adj=0.5,font=3,cex=0.6)
load("~/Map/.RData")
setwd("~/test")
load("~/Map/.RData")
dir()
load("~/Map/.RData")
library(maptools)
gpclibPermit()
library(rgeos)
library(sp)
library(ggplot2)
library(rgdal)
library(rgeos)
library(gridExtra)
library(scales)
library(extrafont)
loadfonts()
source("http://www.pauljhurtado.com/R/code/legendxx.R")
m<-merge(m,expense,by.x = "NAME_1", by.y = "Raion", all.x=T)
#cols <- c("#ffffb2",  "#fecc5c",  "#fd8d3c",	"#f03b20",	"#bd0026")
#cols <- c("#C6DBEF",  "#9ECAE1",  "#6BAED6",	"#3182BD",	"#08519C")
par(family = "Georgia", bg = "transparent", las = 1,omi=c(0.0,0,0.0,0),mai=c(0.0,0,0.0,0))
cols <- c("#FFCCAA",  "#FFB380",  "#FF9955",  "#FF7F2A",	"#FF6600")
#m$cut4<-cut(m$Expenses,breaks = 5)
#par(mfcol = c(1, 3))
par(ps = 20, cex = 1, cex.main = 1)
plot(m,col=cols[m$cut4],border="white")
plot(Transnistria,col="grey",add=T, border="white")
text(coordinates(m),labels=m$NAME_1,cex=.7,col="black")
#title(main="Library Users\n as a Percent of Population", col.main="#013383", family="Arial")
vals<-levels(unique(m$cut4))
par( lend = 1 )
legend(x="bottomright",legend=c("71. 7- 111.0","111.1 - 149.0",
"149.1 - 188.0","188.1 - 226.0",
"226.0 - 265.0"), fill=cols,
title="Average Expenditures",
bty="n", cex=0.6, y.intersp=2,
box.cex=c(2,2)		)
mtext("Source: Moldova National Library, 2013",1,line=3,adj=0.5,font=3,cex=0.6)
