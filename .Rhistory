runApp()
runApp()
library(shiny)
library(MASS)
shinyUI(fluidPage(
# Application title
titlePanel("Statistical Modeling App"),
p('test'),
sidebarLayout(
# Sidebar with a slider input
sidebarPanel(
selectInput("depvar",h4("Select a dependent variable:"),choices=names(Boston),selected="medv"),
selectizeInput("indepvar",h4("Select independent variable(s):"),multiple=TRUE,choices=names(Boston),selected="lstat")
),
# Show a plot of the generated distribution
mainPanel(h4("Model Results"),
verbatimTextOutput("summary")
)
)
))
library(shiny)
library(MASS)
# Define server logic required to draw a histogram
shinyServer(function(input, output) {
selectedData <- reactive({
Boston[, c(input$depvar, input$indepvar)]
})
fit<-reactive({lm(selectedData[,1]~.,selectedData)})
output$summary <- renderPrint({
fit$coefficients
})
})
runApp()
runApp()
runApp()
library(shiny)
library(MASS)
runApp()
fit$coefficients
runApp()
runApp()
runApp()
runApp()
runApp()
MASS::Boston
runApp()
runApp()
runApp()
runApp(display.mode=T)
runApp(display.mode=TRUE)
runApp(display.mode)
runApp()
iris
class(iris)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
write.table(MASS::Boston."Boston.csv")
write.table(MASS::Boston,"Boston.csv")
write.csv(MASS::Boston,"Boston.csv")
Boston<-read.csv("Boston.csv",header=TRUE)
View(Boston)
Boston<-read.csv("Boston.csv",header=TRUE)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
library(shiny)
runApp()
library(MASS)
# Define server logic required to draw a histogram
shinyServer(function(input, output) {
selectedData <- reactive({Boston[,c(input$depvar,input$indepvar)]})
output$vlad <- renderPlot({
pairs(selectedData)
})
})
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
install.packages("shiny")
install.packages("yaml")
library(shiny)
runApp()
runApp()
library(MASS)
lm(Boston[,1]~.,Boston)
d<-lm(Boston[,1]~.,Boston)
names(d)
d$model
d$coefficients
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
formula<-as.formula(paste(input$var,output$var,sep="~"))
runApp()
runApp()
formula<-as.formula(paste('lstat','medv',sep="~"))
lm(formula,Boston)
runApp()
runApp()
print(d$coefficients
)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
names(Boston)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp("shiny")
runApp("shiny",quiet=TRUE)
runApp("shiny",display.mode=T)
runApp("shiny")
runApp("shiny")
attach(Boston)
Boston<-MASS:Boston
runApp("shiny")
runApp("shiny")
library(MASS)
attach(Boston)
load(Boston)
names(Boston)
runApp("shiny")
runApp("shiny")
dataset<-Boston
runApp("shiny")
runApp("shiny")
runApp("shiny")
runApp("shiny")
View(dataset)
runApp("shiny")
newdata[,,]
runApp("shiny")
runApp("shiny")
runApp("shiny")
runApp("shiny")
runApp("shiny")
runApp("shiny")
runApp("shiny")
runApp("shiny")
runApp("shiny")
runApp("shiny")
runApp("shiny")
runApp("shiny")
runApp("shiny")
runApp("shiny")
runApp("shiny")
runApp("shiny")
runApp("shiny")
runApp("shiny")
runApp("shiny")
runApp("shiny")
runApp("shiny")
runApp("shiny")
runApp("shiny")
runApp("shiny")
runApp("shiny")
runApp("shiny")
runApp("shiny")
runApp("shiny")
runApp("shiny")
names(dataset)
names(dataset)="crim"
subset(dataset,names(dataset)="crim")
subset(dataset,names(dataset)="crim")
subset(dataset,"crim")
dataset[names(dataset)="crim"]
dataset[,names(dataset)="crim"]
names(dataset)="crim"]
names(dataset)="crim"
s=names(dataset)="crim"
s
vlad<-reactive({input$depvar})
vlad
runApp("shiny")
dataset["crim"]
runApp("shiny")
runApp("shiny")
runApp("shiny")
runApp("shiny")
daset["crim"]
dataset["crim"]
runApp("shiny")
runApp("shiny")
runApp("shiny")
runApp("shiny")
runApp("shiny")
runApp("shiny")
runApp("shiny")
runApp("shiny")
runApp("shiny")
runApp("shiny")
runApp("shiny")
lm(medv~lstat,dataset)
runApp("shiny")
runApp("shiny")
runApp("shiny")
runApp("shiny")
runApp("shiny")
runApp("shiny")
runApp("shiny")
runApp("shiny")
View(dataset)
View(dataset)
runApp("shiny")
View(dataset)
View(dataset)
str(dataset)
library(MASS)
MASS::Boston
runApp("shiny")
View(dataset)
summary(lm(input$depvar~input$indepvar,dataset))
paste(medv,crim,sep=",")
paste(medv,crim,sep=",")
paste("medv","crim",sep=",")
paste("medv","crim",sep="~")
runApp("shiny")
runApp("shiny")
runApp("shiny")
runApp("shiny")
runApp("shiny")
runApp("shiny")
runApp("shiny")
runApp("shiny")
runApp("shiny")
runApp("shiny")
iris
boston
Boston
runApp("shiny")
runApp("shiny")
runApp("shiny")
runApp("shiny")
runApp("shiny")
runApp("shiny")
runApp("shiny")
runApp("shiny")
runApp("shiny")
runApp("shiny")
runApp("shiny")
library(shiny)
runApp('shiny')
runApp('shiny')
runApp('shiny')
iris[[2]]
names(iris)[[2]]
runApp('shiny')
runApp('shiny')
runApp('shiny')
runApp('shiny')
runApp('shiny')
runApp('shiny')
runApp('shiny')
runApp('shiny')
runApp('shiny')
runApp('shiny',display.mode="showcase")
View(data)
View(data)
source('~/.active-rstudio-document', echo=TRUE)
library(shiny)
shinyServer(function(input, output,session) {
selectedData <-reactive({iris[, c(input$depvar, input$indepvar)]})
output$plot1 <- renderPlot({
plot(selectedData[,1])
})
})
runApp('shiny',display.mode="showcase")
runApp('shiny',display.mode="showcase")
runApp('shiny',display.mode="showcase")
runApp('shiny',display.mode="showcase")
runApp('shiny',display.mode="showcase")
runApp('shiny',display.mode="showcase")
runApp('shiny',display.mode="showcase")
runApp('shiny',display.mode="showcase")
runApp('shiny',display.mode="showcase")
runApp('shiny',display.mode="showcase")
runApp('shiny',display.mode="showcase")
runApp('shiny',display.mode="showcase")
lm(Sepal.Lenght~Sepal.Width, iris)
lm(Sepal.Lenght~Sepal.Width, iris)
lm(Sepal.Length~Sepal.Width, iris)
runApp('shiny',display.mode="showcase")
runApp('shiny',display.mode="showcase")
runApp('shiny',display.mode="showcase")
library(MASS)
runApp('shiny',display.mode="showcase")
names(Boston)
runApp('shiny',display.mode="showcase")
lm(medv~lstat,Boston)
summary(lm(medv~lstat,Boston))
runApp('shiny',display.mode="showcase")
runApp('shiny',display.mode="showcase")
runApp('shiny',display.mode="showcase")
runApp('shiny',display.mode="showcase")
runApp('shiny',display.mode="showcase")
runApp('shiny',display.mode="showcase")
runApp('shiny',display.mode="showcase")
runApp('shiny',display.mode="showcase")
runApp('shiny',display.mode="showcase")
runApp('shiny',display.mode="showcase")
runApp('shiny',display.mode="showcase")
runApp('shiny',display.mode="showcase")
runApp('shiny',display.mode="showcase")
runApp('shiny',display.mode="showcase")
x <- rnorm(15)
y <- x + rnorm(15)
predict(lm(y ~ x))
new <- data.frame(x = seq(-3, 3, 0.5))
predict(lm(y ~ x), new, se.fit = TRUE)
matplot(predict(lm(y ~ x), new, se.fit = TRUE))
x <- rnorm(15)
y <- x + rnorm(15)
y <- x + rnorm(15)
predict(lm(y ~ x))
new <- data.frame(x = seq(-3, 3, 0.5))
pred.w.plim <- predict(lm(y ~ x), new, interval = "prediction")
pred.w.clim <- predict(lm(y ~ x), new, interval = "confidence")
matplot(new$x, cbind(pred.w.clim, pred.w.plim[,-1]),
lty = c(1,2,2,3,3), type = "l", ylab = "predicted y")
predict(lm(lstat~.Boston))
predict(lm(lstat~.Boston))
Boston
names(Boston)
predict(lm(lstat ~.,Boston))
plot(predict(lm(lstat ~.,Boston)))
plot(predict(lm(lstat ~.,Boston),c(1:10)))
library(shiny)
runApp('shiny',display.mode="showcase")
runApp('shiny',display.mode="showcase")
runApp('shiny',display.mode="showcase")
runApp('shiny',display.mode="showcase")
runApp('shiny',display.mode="showcase")
library(MASS)
library(ISLR)
names(Boston)
?Boston
plot(medv~lstat,Boston)
fit1=lm(medv~lstat,data=Boston)
fit1
summary(fit1)
abline(fit1,col="red")
names(fit1)
confint(fit1)
predict(fit1,data.frame(lstat=c(5,10,15)),interval="confidence")
fit2=lm(medv~lstat+age,data=Boston)
summary(fit2)
fit3=lm(medv~.,Boston)
summary(fit3)
par(mfrow=c(2,2))
plot(fit3)
fit4=update(fit3,~.-age-indus)
summary(fit4)
### Nonlinear terms and Interactions
fit5=lm(medv~lstat*age,Boston)
summary(fit5)
fit6=lm(medv~lstat +I(lstat^2),Boston); summary(fit6)
attach(Boston)
par(mfrow=c(1,1))
plot(medv~lstat)
points(lstat,fitted(fit6),col="red",pch=20)
fit7=lm(medv~poly(lstat,4))
points(lstat,fitted(fit7),col="blue",pch=20)
plot(1:20,1:20,pch=1:20,cex=2)
###Qualitative predictors
fix(Carseats)
names(Carseats)
summary(Carseats)
?Boston
runApp('shiny',display.mode="showcase")
runApp('shiny',display.mode="showcase")
runApp('shiny',display.mode="showcase")
runApp('shiny',display.mode="showcase")
runApp('shiny',display.mode="showcase")
runApp('shiny',display.mode="showcase")
runApp('shiny',display.mode="showcase")
runApp('shiny',display.mode="showcase")
runApp('shiny',display.mode="showcase")
runApp('shiny',display.mode="showcase")
runApp('shiny',display.mode="showcase")
runApp('shiny',display.mode="showcase")
runApp('shiny',display.mode="showcase")
runApp('shiny',display.mode="showcase")
runApp('shiny',display.mode="showcase")
runApp('shiny',display.mode="showcase")
runApp('shiny',display.mode="showcase")
runApp('shiny',display.mode="showcase")
runApp('shiny',display.mode="showcase")
runApp('shiny',display.mode="showcase")
runApp('shiny',display.mode="showcase")
runApp('shiny',display.mode="showcase")
runApp('shiny',display.mode="showcase")
runApp('shiny',display.mode="showcase")
runApp('shiny',display.mode="showcase")
runApp('shiny',display.mode="showcase")
runApp('shiny',display.mode="showcase")
runApp('shiny',display.mode="showcase")
runApp('shiny',display.mode="showcase")
runApp('shiny',display.mode="showcase")
runApp('shiny',display.mode="showcase")
runApp('shiny',display.mode="showcase")
runApp('shiny',display.mode="showcase")
runApp('shiny',display.mode="showcase")
runApp('shiny',display.mode="showcase")
runApp('shiny',display.mode="showcase")
runApp('shiny',display.mode="showcase")
runApp('shiny',display.mode="showcase")
runApp('shiny',display.mode="showcase")
runApp('shiny',display.mode="showcase")
runApp('shiny',display.mode="showcase")
runApp('shiny',display.mode="showcase")
runApp('shiny',display.mode="showcase")
runApp('shiny',display.mode="showcase")
runApp('shiny',display.mode="showcase")
runApp('shiny',display.mode="showcase")
runApp('shiny',display.mode="showcase")
runApp('shiny',display.mode="showcase")
runApp('shiny',display.mode="showcase")
runApp('shiny',display.mode="showcase")
runApp('shiny',display.mode="showcase")
runApp('shiny',display.mode="showcase")
runApp('shiny',display.mode="showcase")
runApp('shiny',display.mode="showcase")
runApp('shiny',display.mode="showcase")
runApp('shiny',display.mode="showcase")
runApp('shiny',display.mode="showcase")
runApp('shiny',display.mode="showcase")
runApp('shiny',display.mode="showcase")
runApp('shiny',display.mode="showcase")
runApp('shiny',display.mode="showcase")
runApp('shiny',display.mode="showcase")
runApp('shiny',display.mode="showcase")
runApp('shiny',display.mode="showcase")
HTML("<a href="www.rstudio.com">Click here!</a> ")
runApp('shiny',display.mode="showcase")
runApp('shiny',display.mode="showcase")
runApp('shiny',display.mode="showcase")
runApp('shiny',display.mode="showcase")
runApp('shiny',display.mode="showcase")
runApp('shiny',display.mode="showcase")
devtools::install_github('rstudio/shinyapps')
library(shinyapps)
shinyapps::setAccountInfo(
name="pascalv",
token="AE1292E1FB5046F0E3AE55E5A1FE978B",
secret="qw6xboTyxvRppC86ALxoY+J90Sjg5AexY1l1ybVj")
deployApp("shiny",display.mode="showcase")
deployApp("shiny")
shinyapps::setAccountInfo(
name="pascalv",
token="AE1292E1FB5046F0E3AE55E5A1FE978B",
secret="qw6xboTyxvRppC86ALxoY+J90Sjg5AexY1l1ybVj")
deployApp("shiny")
deployApp()
shinyapps::setAccountInfo(name='pascalv', token='AE1292E1FB5046F0E3AE55E5A1FE978B', secret='qw6xboTyxvRppC86ALxoY+J90Sjg5AexY1l1ybVj')
deployApp()
deployApp(account="pascalv")
getwd()
deployApp(appDir="shiny",account="pascalv")
runApp('shiny',display.mode="showcase")
deployApp(appDir="shiny",account="pascalv",display.mode="showcase")
deployApp(appDir="shiny",account="pascalv")
library(shinyapps)
terminateApp("Documents", account = "pascalv")
library(shinyapps)
terminateApp("Documents", account = "pascalv")
terminateApp("shiny", account = "pascalv")
deployApp(appDir="shiny",account="pascalv",)
configureApp("shiny", size="medium")
configureApp("shiny", size="medium",account = "pascalv")
install_github("slidify", "ramnathv")
install_github("slidifyLibraries", "ramnathv")
devtools::install_github("slidify", "ramnathv")
devtools::install_github("slidifyLibraries", "ramnathv")
library(slidify)
author("shiny_pitch")
